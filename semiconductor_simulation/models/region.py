from typing import Dict, Any
from semiconductor_simulation.core.base_model import BaseModel

class RegionModel(BaseModel):
    """
    Represents a geographical region in the simulation.
    Attributes are now stored in self.attributes inherited from BaseModel.
    Expected initial_attributes keys: gdp, political_stability, semiconductor_investment_focus, 
    research_funding, water_availability, power_stability, labor_cost, environmental_regulations, 
    existing_fab_count, semiconductor_engineer_count, talent_availability, talent_notes.
    """
    def __init__(self, model_id: str, name: str, **initial_attributes: Any):
        # All attributes like gdp, political_stability, etc., 
        # are expected to be passed in initial_attributes.
        # BaseModel will store them in self.attributes.
        super().__init__(model_id, name, initial_attributes)
        
        # Ensure default values for talent attributes if not provided, directly in self.attributes
        # This is one way to handle defaults for attributes that might be optional in the config.
        # Alternatively, the config itself should always provide them, or SimulationManager can default them before passing.
        # For now, let's assume the config is comprehensive or specific attributes are handled by modules.
        # Example of setting a default if not present, though BaseModel already initializes self.attributes with initial_attributes:
        if 'semiconductor_engineer_count' not in self.attributes:
            self.attributes['semiconductor_engineer_count'] = 0
        if 'talent_availability' not in self.attributes:
            self.attributes['talent_availability'] = "medium"
        if 'talent_notes' not in self.attributes:
            self.attributes['talent_notes'] = ""

        # The _capture_attributes method is removed.
        # self.attributes_history list is removed.

    def update_state(self, current_year: int, context: Dict[str, Any]):
        """
        Update region's state.
        Example: GDP might grow, talent pool might change based on policies.
        This method will now use self.get_attribute() and self.set_attribute().
        """
        # print(f"Updating state for Region: {self.name} in year {current_year}")
        
        # Example: GDP growth (placeholder, actual logic would be in a module)
        # current_gdp = self.get_attribute('gdp')
        # if current_gdp is not None:
        #     # Assume a simple growth rate from global_parameters or region-specific factor
        #     gdp_growth_rate = context.get('global_parameters', {}).get('generic_gdp_growth', 0.02)
        #     new_gdp = current_gdp * (1 + gdp_growth_rate)
        #     self.set_attribute('gdp', new_gdp, current_year)

        # Placeholder: talent might be affected by policies in context
        # policies = context.get('models', {}).get('policies', [])
        # for policy_model in policies:
        #     if policy_model.is_policy_active(current_year) and policy_model.get_attribute('policy_type') == 'TalentDevelopment':
        #         # Check if this policy targets this region or has a global/regional effect
        #         # target_regions = policy_model.get_attribute('target_entities') # Assuming target_entities can be region_ids
        #         # if self.model_id in target_regions or "Global" in target_regions: # Simplified targeting
        #         current_engineers = self.get_attribute('semiconductor_engineer_count')
        #         if current_engineers is not None:
        #             # Example: policy adds 1000 engineers to the pool this year
        #             increase = policy_model.get_attribute('talent_increase_per_year', 1000) 
        #             self.set_attribute('semiconductor_engineer_count', current_engineers + increase, current_year)
        #             print(f"Region {self.name} engineer count increased by {increase} due to policy {policy_model.name}")
        pass

    # Additional Attributes (examples based on the framework)
    # self.attributes.setdefault('chips_act_investment_received_billion_usd', 0)
    # self.attributes.setdefault('net_talent_inflow_skilled_engineers_annual', 0)
    # self.attributes.setdefault('knowledge_transfer_limitations_score', 0) # 0: none, 1: low, 5: high
    # self.attributes.setdefault('foreign_investment_screening_intensity_score', 0) # 0: none, 1: low, 5: high
    # self.attributes.setdefault('active_export_controls_on_region', []) # List of policy_ids or descriptions
    # self.attributes.setdefault('research_infrastructure_investment_billion_usd_annual', 0)
    # self.attributes.setdefault('number_of_pilot_lines', 0)
    # self.attributes.setdefault('supply_chain_localization_depth_score', 0.0) # 0.0 (none) to 1.0 (fully localized)
    # self.attributes.setdefault('critical_semiconductor_segments_priority', []) # List of segment names, e.g. ['leading_edge_logic', 'advanced_packaging']
    # self.attributes.setdefault('dominant_national_policies', []) # list of policy_ids or names

    # Example attributes that could be initialized from scenario data:
    # self.attributes.setdefault('total_fab_capacity_kwpm', 0) # Kilo Wafers Per Month
    # self.attributes.setdefault('capacity_by_node', {}) # e.g., {'3nm': 10, '28nm': 50}
    # self.attributes.setdefault('chips_act_funding_available', 0)
    # self.attributes.setdefault('talent_pool_skilled_engineers', 0)
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
    # self.attributes.setdefault('environmental_regulations', 0)
    # self.attributes.setdefault('existing_fab_count', 0)
    # self.attributes.setdefault('talent_availability', "medium")
    # self.attributes.setdefault('talent_notes', "")
    # self.attributes.setdefault('political_stability', "medium")
    # self.attributes.setdefault('semiconductor_investment_focus', "medium")
    # self.attributes.setdefault('research_funding', 0)
    # self.attributes.setdefault('water_availability', "medium")
    # self.attributes.setdefault('power_stability', "medium")
    # self.attributes.setdefault('labor_cost', 0)
        # Example attributes that could be initialized from scenario data:
        # self.attributes.setdefault('gdp', 0)
        # self.attributes.setdefault('total_fab_capacity_kwpm', 0) # Kilo Wafers Per Month
        # self.attributes.setdefault('capacity_by_node', {}) # e.g., {'3nm': 10, '28nm': 50}
        # self.attributes.setdefault('chips_act_funding_available', 0)
        # self.attributes.setdefault('talent_pool_skilled_engineers', 0)

        # Additional Attributes (examples based on the framework)
        # self.attributes.setdefault('chips_act_investment_received_billion_usd', 0)
        # self.attributes.setdefault('net_talent_inflow_skilled_engineers_annual', 0)
        # self.attributes.setdefault('knowledge_transfer_limitations_score', 0) # 0: none, 1: low, 5: high
        # self.attributes.setdefault('foreign_investment_screening_intensity_score', 0) # 0: none, 1: low, 5: high
        # self.attributes.setdefault('active_export_controls_on_region', []) # List of policy_ids or descriptions
        # self.attributes.setdefault('research_infrastructure_investment_billion_usd_annual', 0)
        # self.attributes.setdefault('number_of_pilot_lines', 0)
        # self.attributes.setdefault('supply_chain_localization_depth_score', 0.0) # 0.0 (none) to 1.0 (fully localized)
        # self.attributes.setdefault('critical_semiconductor_segments_priority', []) # List of segment names, e.g. ['leading_edge_logic', 'advanced_packaging']
        # self.attributes.setdefault('dominant_national_policies', []) # list of policy_ids or names

    def update_state(self, current_year: int, context: Dict[str, Any]):
        """
        Update region's state. 
        Example: Talent pool might grow, CHIPS Act funding might be allocated.
        This logic would be driven by specific simulation modules (e.g., GeopoliticalModule).
        """
        # print(f"Updating state for Region: {self.name} in year {current_year}")
        # Placeholder: simple talent pool growth
        # current_talent = self.get_attribute('talent_pool_skilled_engineers')
        # if current_talent is not None:
        #    growth_rate = context.get('global_parameters', {}).get('talent_growth_rate_regional', {}).get(self.model_id, 0.01)
        #    self.set_attribute('talent_pool_skilled_engineers', current_talent * (1 + growth_rate), current_year)
        pass # Actual logic will be complex and driven by modules 